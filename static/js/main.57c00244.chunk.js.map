{"version":3,"sources":["components/Movie.js","components/footer.js","assets/mylogo.png","App.js","index.js"],"names":["Movie","movie","selectMovie","onClick","className","poster_path","data-testid","src","alt","title","release_date","vote_average","Footer","App","MOVIE_API","API_KEY","useState","playing","setPlaying","trailer","setTrailer","movies","setMovies","searchKey","setSearchKey","setMovie","useEffect","fetchMovies","event","a","preventDefault","axios","get","params","api_key","query","data","mov","results","mymove","slice","console","log","length","fetchMovie","id","append_to_response","videos","find","vid","name","window","scrollTo","logo","onSubmit","type","onInput","target","value","style","backgroundImage","backdrop_path","videoId","key","containerClassName","opts","width","height","playerVars","autoplay","controls","cc_load_policy","fs","iv_load_policy","modestbranding","rel","showinfo","overview","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57c00244.chunk.js","sourcesContent":["import React from 'react';\nimport '../index.css';\n\n\nconst Movie = ({movie, selectMovie}) => {\n    const IMAGE_PATH = \"https://image.tmdb.org/t/p/w342\"\n\n    return (\n        <>\n        <div onClick={() => selectMovie(movie)} className={\"movie\"}>\n            <div className=\"movie-title\" >\n                {movie.poster_path &&\n                <img data-testid=\"movie-poster\" src={IMAGE_PATH + movie.poster_path} alt={movie.title} />\n                }\n                <div className={\"flex between movie-infos\"} >\n                    <h5 className={\"movie-title\"} data-testid= \"movie-title\">{movie.title}</h5>\n                    <h5 className='rdate' data-testid= \"movie-release-date\">{movie.release_date}</h5>\n                    {movie.vote_average ? <span className={\"movie-voting\"}>{movie.vote_average}</span> : null}\n                    \n                </div>\n            </div>\n        </div>\n            \n        </>\n    );\n};\n\n\nexport default Movie;","export const Footer = () => {\r\n    return (\r\n      <div className=\"foot\">\r\n        <p className=\"text-sm opacity-[0.4]\">\r\n          Condition of use    Privacy      Policy\r\n        </p>\r\n        <p className=\"text-sm opacity-[0.7]\">\r\n          &#169; MovieBox 2023 by Hamkelvin (Hamed Olundegun) \r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n  export default Footer;","export default __webpack_public_path__ + \"static/media/mylogo.e7faccb9.png\";","import {useEffect, useState} from \"react\"\nimport './App.css'\nimport axios from 'axios'\nimport Movie from \"./components/Movie\"\nimport Youtube from 'react-youtube'\nimport Footer from \"./components/footer\"\nimport logo from './assets/mylogo.png';\n\nfunction App() {\n    const MOVIE_API = \"https://api.themoviedb.org/3/\"\n    const SEARCH_API = MOVIE_API + \"search/movie\"\n    const DISCOVER_API = MOVIE_API + \"discover/movie\"\n    const API_KEY = \"e4213465dfacc08ac8385402206f9c3d\"\n    const BACKDROP_PATH = \"https://image.tmdb.org/t/p/w1280\"\n\n    const [playing, setPlaying] = useState(false)\n    const [trailer, setTrailer] = useState(null)\n    const [movies, setMovies] = useState([])\n    const [searchKey, setSearchKey] = useState(\"\")\n    const [movie, setMovie] = useState({title: \"Loading Movies\"})\n\n    useEffect(() => {\n        fetchMovies()\n    }, [])\n\n    const fetchMovies = async (event) => {\n        if (event) {\n            event.preventDefault()\n        }\n\n        const {data} = await axios.get(`${searchKey ? SEARCH_API : DISCOVER_API}`, {\n            params: {\n                api_key: API_KEY,\n                query: searchKey\n            }\n        })\nconst mov=data.results\nconst mymove=mov.slice(0,10);\n        console.log(data.results[0])\n        console.log(\"data\",mymove)\n        setMovies(mymove)\n        setMovie(mymove[0])\n\n        if (mymove.length) {\n            await fetchMovie(mymove[0].id)\n        }\n    }\n\n    const fetchMovie = async (id) => {\n        const {data} = await axios.get(`${MOVIE_API}movie/${id}`, {\n            params: {\n                api_key: API_KEY,\n                append_to_response: \"videos\"\n            }\n        })\n\n        if (data.videos && data.videos.results) {\n            const trailer = data.videos.results.find(vid => vid.name === \"Official Trailer\")\n            setTrailer(trailer ? trailer : data.videos.results[0])\n        }\n\n        setMovie(data)\n    }\n\n\n    const selectMovie = (movie) => {\n        fetchMovie(movie.id)\n        setPlaying(false)\n        setMovie(movie)\n        window.scrollTo(0, 0)\n    }\n\n    const renderMovies = () => (\n        movies.map(movie => (\n            <Movie\n                selectMovie={selectMovie}\n                key={movie.id}\n                movie={movie}\n            />\n        ))\n    )\n\n    return (\n        <div className=\"App\">\n            <header className=\"center-max-size header\">\n            <img src={logo} alt=\"\" className=\"logo\"/>\n            {/* <span className={\"brand\"}>MovieBox</span> */}\n            <form className=\"form\" onSubmit={fetchMovies}>\n                    <input className=\"search\" type=\"text\" id=\"search\"\n                           onInput={(event) => setSearchKey(event.target.value)}/>\n                    <button className=\"submit-search\" type=\"submit\"><i className=\"fa fa-search\"></i></button>\n                </form>\n                <span className={\"brand\"}>Sign in</span>\n               \n            </header>\n            {movies.length ?\n                <main>\n                    {movie ?\n                        <div className=\"poster\"\n                             style={{backgroundImage: `linear-gradient(rgba(0, 0, 0, 0), rgba(3,26,177,1)), url(${BACKDROP_PATH}${movie.backdrop_path})`}}>\n                            {playing ?\n                                <>\n                                    <Youtube\n                                        videoId={trailer.key}\n                                        className={\"youtube amru\"}\n                                        containerClassName={\"youtube-container amru\"}\n                                        opts={\n                                            {\n                                                width: '100%',\n                                                height: '100%',\n                                                playerVars: {\n                                                    autoplay: 1,\n                                                    controls: 0,\n                                                    cc_load_policy: 0,\n                                                    fs: 0,\n                                                    iv_load_policy: 0,\n                                                    modestbranding: 0,\n                                                    rel: 0,\n                                                    showinfo: 0,\n                                                },\n                                            }\n                                        }\n                                    />\n                                    <button onClick={() => setPlaying(false)} className={\"button close-video\"}>Close\n                                    </button>\n                                </> :\n                                <div className=\"center-max-size\">\n                                    <div className=\"poster-content\">\n                                        {trailer ?\n                                            <button data-testid=\"movie-runtime\" className={\"button play-video\"} onClick={() => setPlaying(true)}\n                                                    type=\"button\">Play\n                                                Trailer</button>\n                                            : 'Sorry, no trailer available'}\n                                        <h1>{movie.title}</h1>\n                                        <p data-testid= \"movie-overview\">{movie.overview}</p>\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                        : null}\n\n                    <div className={\"center-max-size container\"}>\n                        {renderMovies()}\n                    </div>\n                </main>\n                : 'Sorry, no movies found'}\n            <Footer></Footer>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}